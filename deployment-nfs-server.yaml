kind: Deployment
apiVersion: apps/v1
metadata:
  name: nfs-server
  namespace: nfs-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nfs-server
    spec:
      restartPolicy: Always
      serviceAccountName: default
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: nfs-server
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
                - SETPCAP
                - DAC_READ_SEARCH
            privileged: true
          ports:
            - name: nfs
              containerPort: 2049
              protocol: TCP
            - name: mountd
              containerPort: 20048
              protocol: TCP
            - name: rpcbind
              containerPort: 111
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nfs-storage
              mountPath: /exports
            - name: proc
              mountPath: /proc
            - name: modules
              readOnly: true
              mountPath: /lib/modules
            - name: var-lib-nfs
              mountPath: /var/lib/nfs
          terminationMessagePolicy: File
          image: 'quay.io/jaysonzhao/nfsserver:v7'
      serviceAccount: default
      volumes:
        - name: nfs-storage
          persistentVolumeClaim:
            claimName: nfs-rbd-pvc
        - name: proc
          hostPath:
            path: /proc
            type: ''
        - name: modules
          hostPath:
            path: /lib/modules
            type: ''
        - name: var-lib-nfs
          emptyDir: {}
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

